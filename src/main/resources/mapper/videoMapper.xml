<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.web.model.dao.VideoDao">
	<resultMap type="video" id="videoMap">
		<id column="id" property="id" />
		<result column="video_key" property="videoKey" />
		<result column="title" property="title" />
		<result column="url" property="url" />
		<result column="part" property="part" />
		<result column="channel_name" property="channelName" />
		<result column="view_cnt" property="viewCnt" />
		<result column="rate_avg" property="avgRate" />
		<result column="likes" property="likes" />
	</resultMap>
	
	<resultMap type="interest" id="interestMap">
		<result column="part" property="part"/>
		<result column="interest" property="cnt"/>
	</resultMap>

	<select id="selectAll" resultMap="videoMap">
		SELECT * FROM video;
	</select>
	
	<select id="selectWatched" parameterType="int" resultMap="videoMap">
		SELECT * FROM video JOIN watched ON video.id = watched.watched WHERE uid = #{id};
	</select>
	
	<select id="selectLiked" parameterType="int" resultMap="videoMap">
		SELECT * FROM video JOIN likes ON video.id = likes.liked WHERE uid = #{id};
	</select>
	
	<select id="selectByTitle" parameterType="String" resultMap="videoMap">
		SELECT * FROM video WHERE title LIKE '%${videoMap}%';
	</select>
	
	<select id="selectByPart" parameterType="String" resultMap="videoMap">
		SELECT * FROM video WHERE part LIKE '%${videoMap}%';
	</select>
		
	<select id="selectById" parameterType="int" resultMap="videoMap">
		SELECT * FROM video WHERE id = #{id};
	</select>
	
	<select id="getInterest" parameterType="int" resultMap="interestMap">
		SELECT part,
		SUM(interest) AS interest
		FROM
		(
		SELECT part, COUNT(*) AS 'interest' FROM video JOIN likes ON video.id =
		likes.liked WHERE likes.uid = #{id} GROUP BY part
		UNION ALL
		SELECT part, COUNT(*) AS 'interest' FROM video JOIN watched ON video.id =
		watched.watched WHERE watched.uid = #{id} GROUP BY part
		) S
		GROUP BY part
		ORDER BY interest DESC;
	</select>
	
	<select id="selectNotWatchedByPart" parameterType="java.util.HashMap" resultMap="videoMap">
		SELECT * FROM video WHERE part LIKE '%${part}%' 
		AND id NOT IN (SELECT watched FROM watched WHERE uid = #{id})
		ORDER BY rand();	
	</select>
	
	<select id="selectAllRand" resultMap="videoMap">
		SELECT * FROM video ORDER BY rand();
	</select>
	
	<select id="selectNotWatchedAllRand" resultMap="videoMap" parameterType="int">
		SELECT * FROM video ORDER BY rand()
		NOT IN (SELECT watched FROM watched WHERE uid = #{id});
	</select>
	
	
	<update id="update" parameterType="video">
		UPDATE video SET 
		video_key = #{videoKey}, title = #{title}, url = #{url}, part = #{part}, 
		channel_name = #{channelName}, view_cnt = #{viewCnt} WHERE id = #{id};
	</update>
	
	<insert id="insert" parameterType="video">
		INSERT INTO video (video_key, title, url, part, channel_name)
		VALUE
		(#{videoKey}, #{title}, #{url} , #{part} , #{channelName}),
	</insert>
	
	<insert id="insertWatched" parameterType="java.util.HashMap">
		INSERT INTO watched (uid, watched)
		VALUE
		(#{uid}, #{id});
	</insert>
	
	<insert id="insertLikes" parameterType="java.util.HashMap">
		INSERT INTO likes (uid, liked)
		VALUE (#{uid}, #{id});
	</insert>
	
	<delete id="deleteLikes" parameterType="java.util.HashMap">
		DELETE FROM likes 
		WHERE uid = ${uid} AND liked = ${id};
	</delete>
	
	<select id="selectPartAll" resultType="String">
		SELECT part FROM part;
	</select>
	
	<delete id="deleteUserLiked" parameterType="int">
		DELETE FROM likes 
		WHERE uid = ${uid};
	</delete>
	
	<delete id="deleteUserWatched" parameterType="int">
		DELETE FROM watched 
		WHERE uid = ${uid};
	</delete>
</mapper>